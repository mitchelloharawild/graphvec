---
format: gfm
---

<!-- README.md is generated from README.qmd. Please edit that file -->

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "man/figures/README-",
  out.width = "100%"
)
```

# graphvec <a href="https://pkg.mitchelloharawild.com/graphvec"><img src="man/figures/logo.svg" align="right" height="139" alt="graphvec website" /></a>

<!-- badges: start -->
[![Lifecycle: experimental](https://img.shields.io/badge/lifecycle-experimental-orange.svg)](https://lifecycle.r-lib.org/articles/stages.html#experimental)
[![CRAN status](https://www.r-pkg.org/badges/version/graphvec)](https://CRAN.R-project.org/package=graphvec)
<!-- badges: end -->

The graphvec package extends vectors to include graph relationships between their unique values, and offers tools to compute useful summaries of the graph structure for use in summarising, filtering, and otherwise manipulating the graph.

## Installation

You can install the development version of graphvec from [GitHub](https://github.com/) with:

``` r
# install.packages("remotes")
remotes::install_github("mitchelloharawild/graphvec")
```

## Examples

An `agg_vec()` (aggregation vector) defines a simple hierarchical graph structure where there is a single parent node.

```{r}
library(graphvec)
agg_vec(
  x = c(NA, "A", "B"),
  aggregated = c(TRUE, FALSE, FALSE)
)
```

A `graph_vec()` (graph vector) defines a general graph structure where the relationships among the levels of a factor are specified in an adjacency list.

```{r}
library(dplyr)
g <- graph_vec(
  x = factor(c("A", "B", "C", "D", "D", "E")),
  g = tibble(
    from = list(c(1L, 3L), c(2L, 4L)),
    to = c(2L, 5L)
  )
)

g
node_is_child(g, "B")
```

These vectors are particularly useful when used in rectangular tidy data structures.

```{r}
x <- tibble(g, y = rnorm(6))
x
x |> 
  filter(node_is_child(g, "B"))
x |> 
  mutate(node_degree(g))
```

