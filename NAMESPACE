# Generated by roxygen2: do not edit by hand

S3method("!=",agg_vec)
S3method("$",edge_vec)
S3method("==",agg_vec)
S3method(.DollarNames,edge_vec)
S3method(format,agg_vec)
S3method(format,edge_vec)
S3method(format,graph_vec)
S3method(is.na,agg_vec)
S3method(levels,graph_vec)
S3method(vec_cast,agg_vec)
S3method(vec_cast,agg_vec.agg_vec)
S3method(vec_cast,agg_vec.character)
S3method(vec_cast,agg_vec.default)
S3method(vec_cast,character.agg_vec)
S3method(vec_cast,character.edge_vec)
S3method(vec_cast,character.graph_vec)
S3method(vec_cast,edge_vec)
S3method(vec_cast,edge_vec.default)
S3method(vec_cast,edge_vec.edge_vec)
S3method(vec_cast,graph_vec)
S3method(vec_cast,graph_vec.character)
S3method(vec_cast,graph_vec.default)
S3method(vec_cast,graph_vec.graph_vec)
S3method(vec_proxy_compare,agg_vec)
S3method(vec_ptype2,agg_vec)
S3method(vec_ptype2,agg_vec.agg_vec)
S3method(vec_ptype2,agg_vec.character)
S3method(vec_ptype2,agg_vec.default)
S3method(vec_ptype2,character.agg_vec)
S3method(vec_ptype2,edge_vec)
S3method(vec_ptype2,edge_vec.character)
S3method(vec_ptype2,edge_vec.default)
S3method(vec_ptype2,graph_vec)
S3method(vec_ptype2,graph_vec.character)
S3method(vec_ptype2,graph_vec.default)
S3method(vec_ptype_abbr,agg_vec)
S3method(vec_ptype_abbr,edge_vec)
S3method(vec_ptype_abbr,graph_vec)
export(agg_vec)
export(edge_vec)
export(graph_vec)
export(is_aggregated)
export(node_degree)
export(node_disjoint_id)
export(node_distance)
export(node_is_child)
export(nodes.edge_vec)
import(vctrs)
importFrom(igraph,graph_from_edgelist)
importFrom(igraph,subcomponent)
importFrom(utils,.DollarNames)
importFrom(vctrs,vec_ptype2)
